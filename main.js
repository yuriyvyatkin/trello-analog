(()=>{"use strict";class t{constructor(t){this.parentEl=t}static listMarkup(t,e){return`\n        <div class="list-wrapper">\n          <div class="list">\n            <div class="list-header">\n              <h2 class="list-header-name">${t}</h2>\n            </div>\n            <div class="list-cards" data-key="${e}">\n              \x3c!-- раскрытое меню --\x3e\n              <div class="card-composer hide">\n                <div class="card-composer list-card">\n                  <div class="card-composer list-card-details">\n                    <textarea class="card-composer-textarea hover" placeholder="Введите заголовок для этой карточки"></textarea>\n                  </div>\n                </div>\n                <div class="controls">\n                  <div class="controls-section">\n                    <input class="new-card-button hover" type="button" value="Добавить карточку">\n                    <button class="icon-close hover" type="button"></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- закрытое меню --\x3e\n            <div class="card-composer-container">\n              <a class="open-card-composer hover">\n                <span class="icon-add"></span>\n                <span class="add-a-card">Добавить карточку</span>\n              </a>\n            </div>\n          </div>\n        </div>\n    `}static cardMarkup(t){return""!==t?`\n        <a class="list-card hover" href="#">\n          <div class="list-card-details">\n            <span class="list-card-title">\n              ${t}\n            </span>\n          </div>\n          <div class="list-card-remover hover"></div>\n        </a>\n      `:""}static get cardComposerSelector(){return".card-composer"}static get cardComposerContainerSelector(){return".card-composer-container"}static get iconCloseSelector(){return".icon-close"}static get newCardButtonSelector(){return".new-card-button"}static get textareaSelector(){return".card-composer-textarea"}static get cardsListSelector(){return".list-cards"}static get cardSelector(){return".list-card"}static get cardRemoverSelector(){return".list-card-remover"}bindToDOM(){const{listName:t,localStorageKey:e}=this.parentEl.dataset;this.parentEl.innerHTML=this.constructor.listMarkup(t,e);const s=localStorage.getItem(e),i=this.parentEl.querySelector(this.constructor.cardComposerSelector);this.constructor.init(s,i,this.constructor.cardMarkup);const r=this.parentEl.querySelector(this.constructor.cardComposerContainerSelector),n=this.parentEl.querySelector(this.constructor.textareaSelector);r.addEventListener("click",(()=>this.constructor.openCardComposer(r,i,n)));this.parentEl.querySelector(this.constructor.iconCloseSelector).addEventListener("click",(()=>this.constructor.closeCardComposer(r,i))),i.addEventListener("click",(()=>this.constructor.focusOnCardComposer(i)));const o=this.parentEl.querySelector(this.constructor.newCardButtonSelector),l=this.parentEl.querySelector(this.constructor.cardsListSelector);o.addEventListener("click",(()=>this.constructor.addNewCard(l,i,this.constructor.cardMarkup(n.value)))),l.addEventListener("click",(t=>this.constructor.deleteCard(l,t,this.constructor.cardSelector,this.constructor.cardRemoverSelector)))}static init(t,e,s){if(t){let i="";t.split("\n").forEach((t=>{i+=s(t)})),e.insertAdjacentHTML("beforebegin",i)}}static openCardComposer(t,e,s){t.classList.add("hide"),e.classList.remove("hide"),s.focus()}static closeCardComposer(t,e){t.classList.remove("hide"),e.classList.add("hide")}static focusOnCardComposer(t){t.querySelector("textarea").focus()}static addNewCard(t,e,s){const i=e.querySelector("textarea");""!==s?(e.insertAdjacentHTML("beforebegin",s),localStorage.setItem(t.dataset.key,t.innerText),i.value=""):i.focus()}static deleteCard(t,e,s,i){const{target:r}=e;r.className.includes(i.slice(1))&&(r.closest(s).remove(),t.children.length>1?localStorage.setItem(t.dataset.key,t.innerText):localStorage.removeItem(t.dataset.key))}}document.querySelectorAll(".list-container").forEach((e=>{new t(e).bindToDOM()}));const e=document.querySelector(".board"),s=document.querySelectorAll(".hover"),i=new class{constructor(t,e,s){this.board=t,this.hoverElements=e,this.cardsVerticalDistance=s,this.draggedEl=null,this.ghostEl=null,this.template=null,this.origin={}}toggleGrabbing(){document.body.parentElement.classList.toggle("grabbing"),this.hoverElements.forEach((t=>{t.classList.toggle("hover")}))}insertElement(t,e,s){const i=e.closest(".list-card");let r;if(i){r=i.closest(".list-cards");const{top:e}=i.getBoundingClientRect();t.pageY>window.scrollY+e+i.offsetHeight/2?r.insertBefore(s,i.nextElementSibling):r.insertBefore(s,i)}else{r=e;let i=document.elementFromPoint(t.clientX,t.clientY-this.cardsVerticalDistance),n=document.elementFromPoint(t.clientX,t.clientY+this.cardsVerticalDistance);i.className.startsWith("list-card")?(i=i.closest(".list-card"),i&&r.insertBefore(s,i.nextElementSibling)):n.className.startsWith("list-card")?(n=n.closest(".list-card"),n&&r.insertBefore(s,n)):r.insertAdjacentElement("afterbegin",s)}}getCardBack(){this.origin.sibling.insertAdjacentElement(this.origin.position,this.draggedEl)}handleMousedown(){this.board.addEventListener("mousedown",(t=>{t.preventDefault();const e=t.target.closest(".list-card");if(!e||t.target.classList.contains("list-card-remover")||t.target.className.startsWith("card-composer"))return;e.nextElementSibling&&e.nextElementSibling.classList.contains("list-card")?(this.origin.position="beforebegin",this.origin.sibling=e.nextElementSibling):e.previousElementSibling&&e.previousElementSibling.classList.contains("list-card")?(this.origin.position="afterend",this.origin.sibling=e.previousElementSibling):(this.origin.position="afterbegin",this.origin.sibling=e.closest(".list-cards")),this.origin.shiftX=t.clientX-e.getBoundingClientRect().left,this.origin.shiftY=t.clientY-e.getBoundingClientRect().top,this.origin.left=t.pageX-this.origin.shiftX,this.origin.top=t.pageY-this.origin.shiftY,this.draggedEl=e,this.ghostEl=e.cloneNode(!0),this.ghostEl.classList.add("dragged"),document.body.appendChild(this.ghostEl),this.ghostEl.style.left=`${this.origin.left}px`,this.ghostEl.style.top=`${this.origin.top}px`,this.template=e.cloneNode(!0),this.template.style.backgroundColor="#e2e4ea",this.template.style.boxShadow="none",this.template.lastElementChild.style.display="none",this.template.style.cursor="grabbing";this.template.querySelector(".list-card-title").style.color="#e2e4ea",e.replaceWith(this.template),this.toggleGrabbing()}))}handleMousemove(){this.board.addEventListener("mousemove",(t=>{if(t.preventDefault(),!this.draggedEl)return;this.ghostEl.classList.add("transformed"),this.template.remove();const e=document.elementFromPoint(t.clientX,t.clientY);e.className.startsWith("list-card")&&this.insertElement(t,e,this.template),this.ghostEl.style.left=t.pageX-this.origin.shiftX+"px",this.ghostEl.style.top=t.pageY-this.origin.shiftY+"px"}))}handleMouseleave(){this.board.addEventListener("mouseleave",(()=>{this.draggedEl&&(this.template.remove(),this.getCardBack(),document.body.removeChild(this.ghostEl),this.toggleGrabbing(),this.ghostEl=null,this.draggedEl=null,this.template=null,this.origin={})}))}handleMouseup(){this.board.addEventListener("mouseup",(t=>{if(!this.draggedEl)return;this.template.remove();const e=document.elementFromPoint(t.clientX,t.clientY);if(Math.trunc(this.origin.left)===parseInt(this.ghostEl.style.left,10)&&Math.trunc(this.origin.top)===parseInt(this.ghostEl.style.top,10)){this.origin.sibling.insertAdjacentElement(this.origin.position,this.draggedEl)}else if(e.className.startsWith("list-card")){this.insertElement(t,e,this.draggedEl);const s=this.origin.sibling.closest(".list-cards");localStorage.setItem(s.dataset.key,s.innerText);const i=e.closest(".list-cards");s!==i&&localStorage.setItem(i.dataset.key,i.innerText)}else this.getCardBack();document.body.removeChild(this.ghostEl),this.ghostEl=null,this.draggedEl=null,this.template=null,this.origin={},this.toggleGrabbing()}))}}(e,s,8);i.handleMousedown(),i.handleMousemove(),i.handleMouseleave(),i.handleMouseup(),document.addEventListener("keyup",(t=>{if("Enter"===t.key){const t=document.activeElement.closest(".list-cards").querySelector(".new-card-button"),e=t.nextElementSibling;t.click(),e.click(),document.activeElement.value=""}}))})();